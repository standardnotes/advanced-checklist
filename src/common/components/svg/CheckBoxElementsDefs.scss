$transition-duration: 750ms;

.checkbox-container {
  display: block;
  padding-left: 20px;
  position: relative;

  &:last-child {
    border-bottom: none;
  }
}

.checkbox-state {
  height: 0;
  left: 0;
  opacity: 0;
  position: absolute;
  top: 0;
  width: 0;
}

.checkbox-button {
  bottom: 0;
  cursor: pointer;
  fill: none;
  height: 22px;
  left: 0;
  margin: auto;
  position: absolute;
  stroke-linecap: round;
  stroke-linejoin: round;
  stroke-width: 2;
  stroke: var(--sn-stylekit-neutral-color);
  top: 0;
  width: 22px;
}

.strike-through {
  @keyframes strike {
    from {
      text-decoration-color: transparent;
    }
    to {
      text-decoration-color: auto;
    }
  }

  animation-duration: $transition-duration * 0.5;
  animation-fill-mode: forwards;
  animation-name: strike;
  animation-timing-function: linear;
  text-decoration: line-through;
}

.checkbox-square,
.checkbox-mark {
  cursor: pointer;
  transition: stroke-dashoffset $transition-duration
    cubic-bezier(0.9, 0, 0.5, 1);
}

.checkbox-circle {
  animation-delay: 1s;
  animation: none $transition-duration linear;
  stroke-dasharray: 1 6;
  stroke-width: 0;
  stroke: var(--sn-stylekit-neutral-color);
  transform-origin: 13.5px 12.5px;
  transform: scale(0.4) rotate(0deg);
}

.checkbox-square {
  stroke-dasharray: 56.1053, 56.1053;
  stroke-dashoffset: 0;
  stroke: var(--sn-stylekit-neutral-color);
  transition-delay: $transition-duration * 0.2;
}

.checkbox-mark {
  stroke-dasharray: 9.8995, 9.8995;
  stroke-dashoffset: 9.8995;
  stroke: var(--sn-stylekit-neutral-color);
  transition-duration: $transition-duration * 0.4;
}

.checkbox-circle {
  animation-delay: $transition-duration * 0.7;
  animation-duration: $transition-duration * 0.7;
}

.checkbox-state:not(:checked) {
  ~ .checkbox-button .checkbox-square {
    transition-delay: 0s;
    transition-duration: $transition-duration * 0.9;
  }

  ~ .checkbox-button .checkbox-mark {
    transition-delay: 0s;
    transition-duration: 0s;
  }

  ~ .checkbox-button .checkbox-circle {
    transition-delay: 0s;
    transition-duration: 0s;
  }
}

.checkbox-state:checked {
  @keyframes explode {
    30% {
      stroke-opacity: 1;
      stroke-width: 3;
      transform: scale(0.8) rotate(40deg);
    }
    100% {
      stroke-opacity: 0;
      stroke-width: 0;
      transform: scale(1.1) rotate(60deg);
    }
  }

  ~ .checkbox-button .checkbox-square {
    stroke-dashoffset: 56.1053;
    stroke: var(--sn-stylekit-info-color);
    transition-delay: 0s;
  }

  ~ .checkbox-button .checkbox-mark {
    stroke-dashoffset: 0;
    stroke: var(--sn-stylekit-info-color);
    transition-delay: $transition-duration * 0.6;
  }

  ~ .checkbox-button .checkbox-circle {
    animation-name: explode;
    stroke: var(--sn-stylekit-info-color);
  }
}

@keyframes fadeOut {
  100% {
    opacity: 0;
    max-height: 0;
  }
  0% {
    opacity: 1;
    max-height: 25px;
  }
}

@keyframes fadeIn {
  0% {
    opacity: 0;
    max-height: 0;
  }
  100% {
    opacity: 1;
    max-height: 25px;
  }
}

.open-task-container .task-item.completed {
  animation: fadeOut ease $transition-duration;
  animation-delay: $transition-duration * 1.9;
  animation-fill-mode: forwards;
}

.completed-task-container .task-item.open {
  animation: fadeOut ease $transition-duration;
  animation-delay: $transition-duration;
  animation-fill-mode: forwards;
}

.completed-task-container .task-item.completed {
  animation: fadeIn ease $transition-duration;
  animation-delay: 0s;
  animation-fill-mode: forwards;
}

.open-task-container .task-item.open {
  animation: fadeIn ease $transition-duration * 0.8;
  animation-delay: 0s;
  animation-fill-mode: forwards;
}
